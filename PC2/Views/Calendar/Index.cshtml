@model List<CalendarEvent>
@{
    ViewData["Title"] = "Event Calendar";

    List<List<CalendarEvent>> eventDateGroups =
            Model
            .GroupBy(calEvent => calEvent.DateOfEvent)
            .Select(group => group.OrderByDescending(x => x.StartingTime).ToList())
            .OrderByDescending(group => group.First())
            .ToList();
}

<style>
    .agenda .agenda-date {
        width: 170px;
    }

        .agenda .agenda-date .dayofmonth {
            width: 40px !important;
            font-size: 36px !important;
            line-height: 36px !important;
            float: left;
            text-align: right;
            margin-right: 10px;
        }

        .agenda .agenda-date .shortdate {
            font-size: 0.75em;
        }


    /* Times */
    .agenda .agenda-time {
        width: 140px;
    }


    /* Events */
    .agenda .agenda-events {
    }

        .agenda .agenda-events .agenda-event {
        }

    @@media (max-width: 767px) {
    }
</style>

<h1>@ViewData["Title"]</h1>

@if (TempData["UpdateFailed"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["UpdateFailed"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
        </button>
    </div>
}

@if (TempData["EventDeleted"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        Event was deleted successfully!
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
        </button>
    </div>
}

<div class="agenda">
    <div class="table-responsive">
        <table class="table table-condensed table-bordered">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Time</th>
                    <th>Event</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @for (int currentDate = 0; currentDate < eventDateGroups.Count; currentDate++)
                {
                    <tr>
                        <td class="agenda-date" class="active" rowspan="@eventDateGroups[currentDate].Count">
                            <div class="dayofmonth">@eventDateGroups[currentDate][0].DateOfEvent.Day</div>
                            <div class="dayofweek">@eventDateGroups[currentDate][0].DateOfEvent.DayOfWeek</div>
                            <div class="shortdate text-muted">@eventDateGroups[currentDate][0].DateOfEvent.ToString("MMMM"),&nbsp;@eventDateGroups[currentDate][0].DateOfEvent.Year</div>
                        </td>
                        @*loop through all events on this date*@
                        @for (int currentEvent = 0; currentEvent < eventDateGroups[currentDate].Count; currentEvent++) 
                        {
                            string eventDescription = eventDateGroups[currentDate][currentEvent].EventDescription;                         
                            @if (currentEvent > 0) // if this is not the first event on this date, then start a new row
                            {                             
                                <tr>
                                    <td class="agenda-time">
                                        @eventDateGroups[currentDate][currentEvent].StartingTime &nbsp;-&nbsp; @eventDateGroups[currentDate][currentEvent].EndingTime
                                    </td>
                                    <td class="agenda-events">
                                        <div class="agenda-event">                                                                                  
                                        @*loop through EventDescription string to search for links*@
                                        @for (int i = 0; i < eventDescription.Length; i++)  
                                        {
                                            // look for the first instance of "http"
                                            if (eventDescription[i] == 'h' && eventDescription[i + 1] == 't'
                                                && eventDescription[i + 2] == 't' && eventDescription[i + 3] == 'p')
                                            {                                                  
                                                // find the next space after the link if it exists 
                                                int linkEnd = eventDescription.IndexOf(" ", i);                                                   
                                                if (linkEnd == -1)
                                                {
                                                    // if not the link is the last word in the string
                                                    linkEnd = eventDescription.Length;
                                                }                                            
                                                    // create a substring of the link
                                                string link = eventDescription.Substring(i, linkEnd - i);
                                                <a href="@link" target="_blank"> @link</a>
                                                // skip to the end of the link
                                                i += linkEnd - i;
                                            }
                                            else
                                            {
                                                @eventDescription[i]
                                            }
                                        }                                          
                                        </div>
                                    </td>
                                    <td>
                                        @if (@eventDateGroups[currentDate][currentEvent].PC2Event)
                                        {
                                            <p>
                                                PC2 Event
                                            </p>
                                        }
                                        else
                                        {
                                            <p>
                                                County Event
                                            </p>
                                        }
                                    </td>
                                    <td>
                                        <p>
                                            <a asp-action="Edit" asp-route-id="@eventDateGroups[currentDate][currentEvent].CalendarEventID">Edit Event</a> |
                                            <a asp-action="Delete" onclick="confirmEventDeletion();" asp-route-id="@eventDateGroups[currentDate][currentEvent].CalendarEventID">Delete Event</a>
                                        </p>
                                    </td>
                                </tr>
                            }
                            else
                            {
                                <td class="agenda-time">
                                    @eventDateGroups[currentDate][currentEvent].StartingTime &nbsp;-&nbsp; @eventDateGroups[currentDate][currentEvent].EndingTime
                                </td>
                                <td class="agenda-events">
                                    <div class="agenda-event">                                     
                                        @*loop through EventDescription string to search for links*@
                                        @for (int i = 0; i < eventDescription.Length; i++)  
                                        {
                                            // look for the first instance of "http"
                                            if (eventDescription[i] == 'h' && eventDescription[i + 1] == 't'
                                                && eventDescription[i + 2] == 't' && eventDescription[i + 3] == 'p')
                                            {                                                  
                                                // find the next space after the link if it exists 
                                                int linkEnd = eventDescription.IndexOf(" ", i);                                                   
                                                if (linkEnd == -1)
                                                {
                                                    // if not the link is the last word in the string
                                                    linkEnd = eventDescription.Length;
                                                }                                                
                                                // create a substring of the link
                                                string link = eventDescription.Substring(i, linkEnd - i);
                                                <a href="@link" target="_blank"> @link</a>
                                                // skip to the end of the link
                                                i += linkEnd - i;
                                            }
                                            else
                                            {
                                                @eventDescription[i]
                                            }
                                        }                                                                                
                                    </div>
                                </td>
                                <td>
                                        @if (@eventDateGroups[currentDate][currentEvent].PC2Event)
                                        {
                                            <p>
                                                PC2 Event
                                            </p>
                                        }
                                        else
                                        {
                                            <p>
                                                County Event
                                            </p>
                                        }
                                    </td>
                                <td>
                                    <p>
                                        <a asp-action="Edit" asp-route-id="@eventDateGroups[currentDate][currentEvent].CalendarEventID">Edit Event</a> |
                                        <a asp-action="Delete" onclick="confirmEventDeletion();" asp-route-id="@eventDateGroups[currentDate][currentEvent].CalendarEventID">Delete Event</a>
                                    </p>
                                </td>
                            }
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts{
    <script>
        function confirmEventDeletion() {
            let userConfirmed = confirm("Are you sure you want to delete this event?");
            if (!userConfirmed) {
                event.preventDefault();
            }
        }
    </script>
}