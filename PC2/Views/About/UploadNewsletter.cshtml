@model PC2.Models.NewsletterFile

@{
    ViewData["Title"] = "Upload Newsletter";
    
    List<NewsletterFile> newsletterFiles = (List<NewsletterFile>)ViewData["NewsletterFiles"];
}

<h1>@ViewData["Title"]</h1>
@{
    bool hasTempData = TempData["Message"] != null;
    
    if(hasTempData)
    {
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Message"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
    }
}
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="UploadNewsletter" enctype="multipart/form-data" method="post">
            <div class="form-group">
                <input type="file" name="userFile"/>
                <span class="text-danger"></span>               
            </div>
            <br />
            <div class="form-group">
                 <input type="submit" value="Upload" class="btn btn-primary" /> 
            </div>
        </form>
    </div>
</div>
<br />
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @for (int i = newsletterFiles.Count - 1; i >= 0; i--)
        {
            <tr>
                <td>
                    <a href="newsletterFiles[i].Location">@newsletterFiles[i].Name</a>
                </td>
                <td>
                    <a asp-action="DeleteNewsletter" asp-route-id="@newsletterFiles[i].NewsletterId">Delete</a>
                    <a asp-action="RenameNewsletter" asp-route-id="@newsletterFiles[i].NewsletterId">Rename</a>
                </td>
            </tr>
        }
    </tbody>
</table>
